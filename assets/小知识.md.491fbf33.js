import{_ as a,c as e,o as s,a as n}from"./app.4a2ec065.js";const C=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"阿里云盘命令行","slug":"阿里云盘命令行","link":"#阿里云盘命令行","children":[]},{"level":2,"title":"在 Powershell 中使用 Path 环境变量","slug":"在-powershell-中使用-path-环境变量","link":"#在-powershell-中使用-path-环境变量","children":[]}],"relativePath":"小知识.md"}'),t={name:"小知识.md"},l=n(`<h2 id="阿里云盘命令行" tabindex="-1">阿里云盘命令行 <a class="header-anchor" href="#阿里云盘命令行" aria-hidden="true">#</a></h2><h4 id="下载安装" tabindex="-1">下载安装 <a class="header-anchor" href="#下载安装" aria-hidden="true">#</a></h4><p>去 <a href="https://github.com/tickstep/aliyunpan" target="_blank" rel="noreferrer">https://github.com/tickstep/aliyunpan</a> 下载阿里云盘命令行的Windows程序（Windows、X64），解压即可。</p><p>将包含 aliyunpan.exe 的目录添加到 PATH 中，打开Powershell。使用 aliyunpan -v 查看版本，使用aliyunpan -h 查看帮助。</p><p>也可以直接双击 aliyunpan.exe ，或者在 Powershell 中输入 aliyunpan 进入交互式命令行。</p><h4 id="登录" tabindex="-1">登录 <a class="header-anchor" href="#登录" aria-hidden="true">#</a></h4><p>首先按照下图的步骤获取Refresh_Token：</p><p><img src="https://pic-1308471754.cos.ap-guangzhou.myqcloud.com/20221227165949_66752296cc20f4764746a0ae1622546a.png" alt="20221227165949_66752296cc20f4764746a0ae1622546a.png"></p><p>然后双击 aliyunpan.exe ，打开交互式命令行对话框，根据提示输入粘贴 Refresh_Token，回车即可登录。在提示符中看到自己的账户名说明登录成功。</p><h4 id="基本用法" tabindex="-1">基本用法 <a class="header-anchor" href="#基本用法" aria-hidden="true">#</a></h4><p>aliyunpan命令行的对文件和目录的使用和Linux基本相同。</p><table><thead><tr><th>操作</th><th>命令</th></tr></thead><tbody><tr><td>打印云盘的当前工作目录</td><td>pwd</td></tr><tr><td>切换到云盘的“文档”文件夹下</td><td>cd /文档</td></tr><tr><td>切换到上级目录</td><td>cd ..</td></tr><tr><td>切换到阿里云盘的根目录</td><td>cd /</td></tr><tr><td>列出当前工作目录</td><td>ls</td></tr><tr><td>列出指定的目录</td><td>ls 云盘文件或目录</td></tr></tbody></table><h4 id="下载文件" tabindex="-1">下载文件 <a class="header-anchor" href="#下载文件" aria-hidden="true">#</a></h4><p>要下载文件/目录，运行</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">d   文件或目录1  文件或目录2  ...</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>这里的 d 是 download 的简写。</p><p>可选参数：</p><ul><li>--ow ： 覆盖已存在文件</li><li>--save ： 将文件直接保存到本地当前目录</li><li>--saveto 本地目录 ： 将文件保存到本地目录</li></ul><p>也可以设置默认保存的本地目录：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">config  set  -savedir  本地路径</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>要上传文件，运行：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">u   本地文件或目录   云盘目录</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>这里的 u 是 upload 的简写。</p><h4 id="同步文件" tabindex="-1">同步文件 <a class="header-anchor" href="#同步文件" aria-hidden="true">#</a></h4><p>与上传、下载不同的是，同步文件可以是双向的，也可以是增量同步，同步模式分为三种：</p><ul><li>同步上传：将本地目录同步上传到云盘目录，如果有重名文件或子目录，本地的会覆盖云盘的。</li><li>同步下载：将云盘目录同步下载到本地目录。</li><li>双向同步：保持本地目录和云盘目录的最终一致性。</li></ul><p>我们一般只用到同步上传，也可以叫备份：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">aliyunpan  sync  start  -ldir  &quot;D:\\bak&quot;  -pdir  &quot;/bak&quot;  -mode &quot;upload&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>这行命令的解释如下：</p><ul><li>sync：同步子命令</li><li>start：开始同步</li><li>-ldir： 指明本地目录</li><li>-pdir：指明云盘目录</li><li>-mode：同步模式，分为upload（同步上传）、download（同步下载）、sync（双向同步）</li></ul><p>另外需要说明的是，笔者测试的时候发现中文路径存在乱码的情况，所以建议本地和云盘的目录都使用英文。</p><br><br><br><br><h2 id="在-powershell-中使用-path-环境变量" tabindex="-1">在 Powershell 中使用 Path 环境变量 <a class="header-anchor" href="#在-powershell-中使用-path-环境变量" aria-hidden="true">#</a></h2><h4 id="查看path环境变量" tabindex="-1">查看Path环境变量 <a class="header-anchor" href="#查看path环境变量" aria-hidden="true">#</a></h4><p>要查看Path环境变量，运行：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">[Environment]::GetEnvironmentVariable(&#39;Path&#39;, &#39;User&#39;)</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>这会输出当前用户的 Path 环境变量。</p><p>如果需要查看系统的Path环境变量，运行：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">[Environment]::GetEnvironmentVariable(&#39;Path&#39;,  &#39;Machine&#39;)</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>由于Powershell 不区分大小写，所以写成 path、user、machine、PATH 等都是可以的。</p><p>上面两行命令会输出以分号分隔的路径列表，可读性不高，要想在每一行显示一条路径，运行：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">[Environment]::GetEnvironmentVariable(&#39;Path&#39;, &#39;User&#39;)   -split  &#39;;&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>加上 -split &#39;;&#39; 表示以分号换行。</p><p>另外，网上有一些说法是使用 $env:Path，笔者测试过，这只是临时改变Path变量，并没有写到系统里面。</p><h4 id="添加路径到path环境变量" tabindex="-1">添加路径到Path环境变量 <a class="header-anchor" href="#添加路径到path环境变量" aria-hidden="true">#</a></h4><p>例如，要将 D:\\Program Files 添加到用户的Path中，运行：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">[Environment]::SetEnvironmentVariable(&#39;Path&#39;, $env:Path+&#39;D:\\Program Files&#39; , &#39;User&#39;)</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div>`,50),p=[l];function i(r,o,d,c,h,u){return s(),e("div",null,p)}const y=a(t,[["render",i]]);export{C as __pageData,y as default};
