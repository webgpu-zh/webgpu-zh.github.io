import{_ as s,c as a,o as e,a as n}from"./app.4a2ec065.js";const y=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"数组的slice()方法.md"}'),t={name:"数组的slice()方法.md"},l=n(`<h4 id="array-prototype-slice" tabindex="-1">Array.prototype.slice() <a class="header-anchor" href="#array-prototype-slice" aria-hidden="true">#</a></h4><p>数组实例的slice()用于返回一个子数组，也叫数组切片，该方法接收两个参数：</p><ul><li>起点的索引位置，包含</li><li>终点的索引位置，不包含</li></ul><p>例如：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">const arr1 = [1,2,3,4,5,6]</span></span>
<span class="line"><span style="color:#A6ACCD;">const arr2 = arr1.slice(1,3)</span></span>
<span class="line"><span style="color:#A6ACCD;">console.log(arr2)  // [2,3]</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>有一种简便的记忆方法，slice(n,m)返回第 n+1 到第 m 个元素组成的新数组。</p>`,6),o=[l];function c(r,p,i,_,d,h){return e(),a("div",null,o)}const A=s(t,[["render",c]]);export{y as __pageData,A as default};
