import{_ as s,c as a,o as e,a as n}from"./app.4a2ec065.js";const y=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":3,"title":"set","slug":"set","link":"#set","children":[]}],"relativePath":"set.md"}'),l={name:"set.md"},t=n(`<h3 id="set" tabindex="-1">set <a class="header-anchor" href="#set" aria-hidden="true">#</a></h3><p>Set数据类型类是ES6新增的集合引用类型，表示元素唯一的集合。结构上类似于数组，与数组的区别是Set的元素不能重复。</p><p>可以使用构造函数新建一个空的Set实例：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">const set = new Set()</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>该函数也接收一个可迭代对象：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">const set = new Set([1,2,3])</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>打印一个set实例会输出如下结果：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">const set = new Set([1,2,3]</span></span>
<span class="line"><span style="color:#A6ACCD;">console.log(set)  //=&gt; Set(3) { 1, 2, 3 }</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>set实例的size属性返回set的元素个数：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">const set = new Set([1,2,3])</span></span>
<span class="line"><span style="color:#A6ACCD;">console.log(set.size)</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>使用add()方法添加元素，可使用链式操作：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">const set = new Set().add(1).add(2).add(3)</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>要查询是否包含某个元素，使用has()方法，该方法返回一个布尔值：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">const set = new Set([1,2,3])</span></span>
<span class="line"><span style="color:#A6ACCD;">console.log(set.has(2))</span></span>
<span class="line"><span style="color:#A6ACCD;">console.log(set.has(6))</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>要删除某个元素，使用delete()方法，可以选择接收返回值，返回值是一个布尔值，表示是否已删除成功:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">const set = new Set([1,2,3])</span></span>
<span class="line"><span style="color:#A6ACCD;">set.delete(1)</span></span>
<span class="line"><span style="color:#A6ACCD;">console.log(set.delete(2))  //=&gt;true</span></span>
<span class="line"><span style="color:#A6ACCD;">console.log(set.delete(2))  //=&gt; false</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>要清空set的所有严元素，使用clear()方法：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">const set = new Set([1,2,3])</span></span>
<span class="line"><span style="color:#A6ACCD;">set.clear()</span></span>
<span class="line"><span style="color:#A6ACCD;">console.log(set.size)  //=&gt;0</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div>`,18),p=[t];function o(c,i,d,r,C,A){return e(),a("div",null,p)}const h=s(l,[["render",o]]);export{y as __pageData,h as default};
