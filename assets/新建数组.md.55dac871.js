import{_ as s,c as a,o as n,a as e}from"./app.4a2ec065.js";const _=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"新建数组.md"}'),l={name:"新建数组.md"},p=e(`<h4 id="新建数组" tabindex="-1">新建数组 <a class="header-anchor" href="#新建数组" aria-hidden="true">#</a></h4><p>有多种方式新建数组。</p><p>第一种方式是使用Array()构造函数，如下：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">const arr1 = new Array()  // 建立一个空数组</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">const arr2 = new Array(3)  // 建立一个包含3个元素的数组</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>第二种方式是使用数组字面量，外层用中括号([])包裹，数组元素之间用逗号隔开，如下：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">const arr1 = []  // 建立一个空数组</span></span>
<span class="line"><span style="color:#A6ACCD;">const arr2 = [1,2,3]  // 建立一个数组，包括3个元素</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>第三种方式是使用Array.from()静态方法，该方法接收一个可迭代对象，例如：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">const str = &#39;hello&#39;  // 字符串是可迭代对象</span></span>
<span class="line"><span style="color:#A6ACCD;">const arr1 = Array.from(str) </span></span>
<span class="line"><span style="color:#A6ACCD;">console.log(arr1)  // [&#39;h&#39;,&#39;e&#39;,&#39;l&#39;,&#39;l&#39;,&#39;o&#39;]</span></span>
<span class="line"><span style="color:#A6ACCD;">const set = new Set(1,2,3)  // 集合是可迭代对象</span></span>
<span class="line"><span style="color:#A6ACCD;">const arr2 = Array.from(set)</span></span>
<span class="line"><span style="color:#A6ACCD;">console.log(arr2)  // [1,2,3]</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>第四种方式是使用Array.of()静态方法，该方法与Array.from()类似，区别是Array.of()接收若干个元素作为参数组成新数组的元素，例如：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">const arr = Array.of(1,2,3)</span></span>
<span class="line"><span style="color:#A6ACCD;">console.log(arr) // [1,2,3]</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>第五种方式是使用三点运算符(...)，该方法可以看作是Array.from()方法的语法糖，接收一个可迭代对象，通常用于快速将字符串转化为数组，例如：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">const str = &#39;hello&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">const arr = [...str]</span></span>
<span class="line"><span style="color:#A6ACCD;">console.log(arr)  // [&#39;h&#39;,&#39;e&#39;,&#39;l&#39;,&#39;l&#39;,&#39;o&#39;]</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>当然，还有许多方法可以新建或返回新数组，比如:Object.keys()、Object.values()、Object.entries(),这将在后面会讲到。</p>`,13),o=[p];function t(c,r,i,A,C,d){return n(),a("div",null,o)}const h=s(l,[["render",t]]);export{_ as __pageData,h as default};
