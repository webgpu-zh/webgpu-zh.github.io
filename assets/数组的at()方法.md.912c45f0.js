import{_ as a,c as s,o as n,a as e}from"./app.4a2ec065.js";const y=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"数组的at()方法.md"}'),t={name:"数组的at()方法.md"},o=e(`<h4 id="array-prototype-at" tabindex="-1"><a href="http://Array.prototype.at" target="_blank" rel="noreferrer">Array.prototype.at</a>() <a class="header-anchor" href="#array-prototype-at" aria-hidden="true">#</a></h4><p>ES2019新增了<code>at()</code>方法，该方法可以从倒数第一位开始访问数组元素，以往我们要找到数组的最后一个元素，使用的是：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">const arr = [1,2,3]</span></span>
<span class="line"><span style="color:#A6ACCD;">console.log(arr[arr.length-1])  // 3</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>现在，有了<code>at()</code>方法，便可以非常方便地返回最后一个元素值:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">const arr = [1,2,3]</span></span>
<span class="line"><span style="color:#A6ACCD;">console.log(arr.at(-1))  // 3</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>通过索引返回元素，<code>at()</code>方法比中括号形式更加通用，因为<code>at()</code>可以接收一个正整数或负整数，正整数就是正序索引，等同于中括号形式([]),而负整数就是逆序索引，例如：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">const arr = [1,2,3]</span></span>
<span class="line"><span style="color:#A6ACCD;">console.log(arr.at(0))  // 1 , 等价于arr[0]</span></span>
<span class="line"><span style="color:#A6ACCD;">console.log(arr.at(-1))  // 3 , 返回倒数第一个元素值</span></span>
<span class="line"><span style="color:#A6ACCD;">console.log(arr.at(-2)) // 2 , 返回倒数第二个元素值</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div>`,7),l=[o];function p(r,c,i,d,_,C){return n(),s("div",null,l)}const h=a(t,[["render",p]]);export{y as __pageData,h as default};
